#version 430 core
#define BLOCKS_COUNT 8
#define MIN_MAX_FLOAT_MULTIPLIER 100000000.0

layout (local_size_x = BLOCKS_COUNT, local_size_y = BLOCKS_COUNT, local_size_z = BLOCKS_COUNT) in;
layout (rgba32f, binding = 0) uniform image3D ImgOutput;

layout(std140, binding = 1) buffer MinMaxValues
{
	int Mn;
	int Mx;
};

void main()
{
	ivec3 pixelCoords = ivec3(gl_GlobalInvocationID);
	ivec3 imageSize   = imageSize(ImgOutput);

	if (pixelCoords.x >= imageSize.x || 
	    pixelCoords.y >= imageSize.y || 
		pixelCoords.z >= imageSize.z)
		return;

	float color = imageLoad(ImgOutput, pixelCoords).x;
	float mn    = float(Mn) / MIN_MAX_FLOAT_MULTIPLIER;
	float mx    = float(Mx) / MIN_MAX_FLOAT_MULTIPLIER;

	      color = (color - mn) / (mx - mn);

	imageStore(ImgOutput, pixelCoords, vec4(color, color, color, 1.0));
}